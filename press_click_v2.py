# -*- coding: utf-8 -*-
"""press-click-v2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bb6q1ysEMlSA1rUU8vP2O2wCHyNzu7ic
"""

import threading
import time
from socket import *
import numpy as np
import matplotlib.pyplot as plt
import pyautogui

prev_sensor = np.zeros(8)
colors ['b', 'r', 'y', 'g', 'c', 'k', 'm', '#e41a1c']
plot_num= 10 # plot されるセンサ値の数
plot_idx = 0
press_id=1 #圧力センサー
accel_x_id=2 #加速度計
accel_y_id=3 #加速度計
prev_x, prev_y=0,0

class ReceiveThread (threading.Thread):
	def _init__(self, PORT=12345):
		threading.Thread.__init__(self)
		self.data = 'hoge'
		self.kill_flag = False
		# line information
		self.HOST = "127.0.0.1"
		self.PORT = PORT
		self.BUFSIZE = 1024
		self.ADDR = (gethostbyname (self. HOST), self.PORT)
		# bind
		self.udpServSock = socket (AF_INET, SOCK_DGRAM)
		self.udpServSock.bind(self.ADDR)
		self.received = False

	def get_data(self):
		data_ary = []
		for i in reversed (range (8)):
			num = int(str(self.data[i*8: (i+1)*8]))
			data_ary.append(num/ 167.0/10000)
		self.received = False
		return data_ary

	def run(self):
		while True:
			try:
				data, self.addr = self.udpServSock.recvfrom(self. BUFSIZE)
				self.data = data.decode()
				self.received = True
			except:
				pass

th= ReceiveThread()
th.setDaemon(True)
th.start()
plt.ion()
while True:
  if not th.data:
    break
  if th.received:
    sensor_data = th.get_data()
    if prev_x!=0:
      diff = sensor_data[accel_x_id-1]-prev_x
      if diff>0.2 or diff<-0.2:
        pyautogui.move(diff*80,0)
    if prev_y!=0:
      diff = sensor_data[accel_y_id-1]-prev_y
      if diff>0.2 or diff<-0.2:
        pyautogui.move(0,-diff*80)
    prev_x,prev_y=sensor_data[accel_x_id-1],sensor_data[accel_y_id-1]

    if sensor_data[press_id-1]>2.0:
      pyautogui.rightClick()
      time.sleep(1)
    elif sensor_data[press_id-1]>0.1:
      pyautogui.click()
      time.sleep(1)

  time.sleep(1)